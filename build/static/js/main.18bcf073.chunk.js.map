{"version":3,"sources":["shared/context/auth-context.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/SideDrawer.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","NavLinks","props","auth","useContext","React","createElement","className","NavLink","to","exact","concat","onClick","MainHeader","children","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","ReactDOM","createPortal","document","getElementById","Backdrop","MainNavigation","drawerIsOpen","setDrawerIsOpen","useState","closeDrawerHandler","Fragment","openDrawerHandler","Link","Avatar","style","src","image","alt","width","height","Card","UserItem","id","process","name","placeCount","UsersList","items","length","map","user","key","places","ModalOverlay","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","onCancel","Button","href","size","inverse","danger","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","pickImageHandler","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","NewPlace","inputHandler","title","description","address","history","useHistory","formData","FormData","append","Authorization","Map","mapRef","zoom","window","ol","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","coordinates","onDelete","openMapHandler","creatorId","showDeleteWarningHandler","PlaceList","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","console","log","switchModeHandler","prevMode","logoutTimer","App","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","tokenExpDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","Router","render"],"mappings":"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","file":"static/js/main.18bcf073.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\n// Context allows to pass data between any\n// components in application without using props\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD NEW PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { CSSTransition } from \"react-transition-group\";\n// Animation library https://reactcommunity.org/react-transition-group/\n\nimport \"./SideDrawer.css\";\n\n// Navbar for a mobile screen\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n\n// React Portals provide a way to render children into a DOM node that exists outside of the DOM hierarchy of the parent component.\n// Portals in React allows us to project or render a React component in a different place than it normally would be rendered.\n// Normally the side drawer would be rendered as part of our main navigation and therefore wherever this main navigation is rendered.\n// Now with a portal, we can mark a new place in public index.html where we want to render our portal content.\n// We add a new div 'drawer hook' in front of root div. This is where we render side drawer.\n\n// This method takes two arguments:\n// The first argument is the JSX element that you want to render.\n// The second argument is a reference to the DOM node where you want to render the element.\n\n// We tell React that it should render this content here. For that, we store jsx content in a new constant,\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport NavLinks from \"./NavLinks\";\nimport MainHeader from \"./MainHeader\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\n\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = (props) => {\n  // Open/close the mobile screen navbar\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n  // Trigger closeDrawerHandler in a Backdrop component which is render\n  // as a background to the Side Drawer. The click on this background, will close the Side Drawer\n  // The Backdrop also utilizes the Portal concept and therefore should be added as\n  // a backdrop hook in index.html file.\n  return (\n    <>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">FLASHBACK&#x2710;UP</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\nimport \"./Avatar.css\";\n\nconst Avatar = (props) => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\nimport Card from \"../../shared/components/UIElements/Card\";\n\nimport \"./UserItem.css\";\n\n// Using <Link> instead of traditional anchor tags (<a>) ensures that navigation occurs within the React application, allowing for a smoother, single-page application experience.\nconst UserItem = (props) => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\n\nimport UserItem from \"./UserItem\";\nimport Card from \"../../shared/components/UIElements/Card\";\n\nimport \"./UsersList.css\";\n\nconst UsersList = (props) => {\n  // check if there are any users\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2> No users found</h2>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <ul className=\"users-list\">\n      {props.items.map((user) => {\n        return (\n          <UserItem\n            key={user.id}\n            id={user.id}\n            image={user.image}\n            name={user.name}\n            placeCount={user.places.length}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\n// Extra flexibility for the className -> there are in template literal not only modal class\n// but also prop.className so that allows add new classes to the modal.\n\n// Extra flexibility for the form -> add an onSubmit handler and check if props onSubmit is set and call it.\n// Otherwise pass an inline function where get the event and event prevent default to make sure that if\n// we render any buttons inside of the form, we don't accidentally reload the page by triggering form submission.\n\n// This component is not exported but used by Modal\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  // Render different things based on the props received.\n  // And return a normal button if there are neither a 'to' nor a 'href' prop,\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>OK</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  // Wrap with useCallback to avoid an infinite loop\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n\n      // Abort request if the page switched\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal, // Link the AbbortController to this request and can be used to cancel this request.\n        });\n\n        const responseData = await response.json();\n\n        // Filter all request controllers and remove the request controller\n        // which been used for this request\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        // Check if the response from the server it is expected data (200),\n        // but not an error data (400 or 500)\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  // Function reset error\n  const clearError = () => {\n    setError(null);\n  };\n\n  // This cleanup function go through all abort controllers and on every abort controller.\n  // If call abort and the request to which it is linked will be aborted then.\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from \"react\";\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </>\n  );\n};\n\nexport default Users;\n","// file with validation logic\n\n// Identifiers\nconst VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\n// Functions take input and return validator configuration objects with type and val.\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\n// Function go through array of validators and checks for the different types and runs\n// different validation logic.\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  // Use useReducer instead of several useStates\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  // Function run some logic (a new value back to the place) whenever the input value or validity changes because\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  // Function trigger whenever the user enters something\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  // Function shows an error when user loses focus on\n  // the input element which means the user had to click\n  // into it and then clicked out of it.\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  // htmlFor is for attribut 'for' in <lable> element in JS\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  // Image preview. Function execute whenever the file changes.\n  useEffect(() => {\n    if (!file) {\n      // if image is undefined\n      return;\n    }\n    // FileReader is a browser api to convert files to readable urls.\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  // Pass file to the form and upload to backend.\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    // Check if file exist and it is exactly 1 file\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0]; // extract file and get the first and only one\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  // Form handler\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }} // being hidden here but functionality remains\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\" // input type file has a default accept attribute to configure accepted file types\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          UPLOAD IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          // skip this property if it is undefined\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  // Use useCallback to wrap a function, so no new function object is created\n  // whenever the function renders but that then does not lead to use effect to run again.\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  // Hook gives access to the history instance that may be used to navigate.\n  const history = useHistory();\n\n  // Handle the form submision\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useEffect } from \"react\";\n\nimport \"./Map.css\";\n\nconst Map = (props) => {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  // Google map\n  // useEffect(() => {\n  //   const map = new window.google.maps.Map(mapRef.current, {\n  //     center: center,\n  //     zoom: zoom,\n  //   });\n\n  //   new window.google.maps.Marker({ position: center, map: map });\n  // }, [center, zoom]);\n\n  // Alternative - OpenLayers\n  useEffect(() => {\n    new window.ol.Map({\n      target: mapRef.current.id,\n      layers: [\n        new window.ol.layer.Tile({\n          source: new window.ol.source.OSM(),\n        }),\n      ],\n      view: new window.ol.View({\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\n        zoom: zoom,\n      }),\n    });\n  }, [center, zoom]);\n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n      id=\"map\"\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from \"react\";\n\nimport Map from \"../../shared/components/UIElements/Map\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./PlaceItem.css\";\n\nconst PlaceItem = (props) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  // Manage map modal window\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  // Manage delete place window\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        \"DELETE\",\n        null,\n        { Authorization: \"Bearer \" + auth.token }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport PlaceItem from \"./PlaceItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./PlaceList.css\";\n\nconst PlaceList = (props) => {\n  //check if there are any places\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  // The useParams hook returns an object of key/value pairs of the dynamic params\n  // from the current URL that were matched by the <Route path>.\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  // Handler for place deete\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </>\n  );\n};\n\nexport default UserPlaces;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  // Update data. usEffect is needed to prevent a rerender and infinite loop.\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [setFormData, placeId, sendRequest]);\n\n  // Form submition\n  const placeUpdateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      history.push(\"/\" + auth.userId + \"/places\");\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  // If there is no id\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  // Switch to login/signup\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: { value: null, isValid: false },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  // Submit login/signup & HTTP request\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    console.log(formState.inputs);\n\n    // login\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {} // do nothing if there is an error\n    } else {\n      // signup\n      try {\n        // Use formData instead of JSON which can not read image data.\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\n          \"POST\",\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </>\n  );\n};\n\nexport default Auth;\n","import { useState, useCallback, useEffect } from \"react\";\n\n// Its outside becouse this not data which should render\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  // Manage login/logout\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    // When a user login, we set a timer after which the user log out.\n    // Store the expected expiration date.\n    const tokenExpDate =\n      // Get current date and get number of milliseconds since the beginning of time.\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpDate);\n    // Save token in local storage\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpDate.toISOString(),\n        // This is a special kind of string which stores date information and which can be converted back to a date.\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  // Set the timer whenever token changes.\n  // Log in - set a new timer, log out - clear the timer.\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      // Calculate the remaining time\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  // Function check local storage for a token.\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n\n// The \"Redirect\" component allows to make sure that we are not able to end up on unsupported pages\n// When the URL changes the 'Redirect' component go through all the routes\n// and see if the path is '/', render that. If the path is anything else,\n// this will not trigger and instead redirect us back to '/'.\n\n// The 'Switch' component instructs react router that inside of the switch block\n// whenever it encounters a fitting root, it will not evaluate the lines thereafter,\n// so it will not redirect if it was able to identify the path.\n\nimport Users from \"./user/pages/Users\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  // Manage redirections\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}